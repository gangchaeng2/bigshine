{"version":3,"sources":["webpack:///./src/templates/blogTemplate.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header/styled.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Layout/styled.js","webpack:///./src/components/Layout/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","components_Layout__WEBPACK_IMPORTED_MODULE_2__","Template","_ref","markdownRemark","data","frontmatter","html","a","createElement","title","date","dangerouslySetInnerHTML","__html","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Wrap","styled","div","withConfig","displayName","componentId","A","Link","Ul","ul","Header","description","react_default","to","className","GlobalStyle","createGlobalStyle","_templateObject","reset","Layout","Fragment","components_Header","node"],"mappings":"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","file":"component---src-templates-blog-template-js-cad3987df66383fc74d3.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\n\nimport Layout from 'components/Layout'\n\nconst Template = ({ data }) => {\n  const { markdownRemark } = data\n  const { frontmatter, html } = markdownRemark\n\n  return (\n    <Layout>\n      <Helmet title={frontmatter.title} />\n\n      <div>\n        <div>\n          <h1>{frontmatter.title}</h1>\n          <h2>{frontmatter.date}</h2>\n        </div>\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport default Template\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import styled from 'styled-components'\nimport { Link } from 'gatsby'\n\nexport const Wrap = styled.div`\n  padding: 0 20px;\n  height: 80px;\n  box-shadow: 0 4px 12px 0 rgba(0, 0, 0, 0.05);\n`\n\nexport const A = styled(Link)`\n  float: left;\n  line-height: 80px;\n  font-size: 20px;\n  color: #000;\n`\n\nexport const Ul = styled.ul`\n  float: right;\n  line-height: 80px;\n\n  > li {\n    float: left;\n\n    & + li {\n      margin-left: 10px;\n    }\n  }\n`","import React from 'react'\n\nimport { Wrap, A, Ul } from './styled'\n\nconst Header = ({ title, description, }) => {\n  return (\n    <Wrap>\n      <A to=\"/\">Bigshine</A>\n\n      <Ul className='Clearfix'>\n        <li>About</li>\n        <li>About</li>\n        <li>About</li>\n      </Ul>\n    </Wrap>\n  )\n}\n\nexport default Header\n","import { createGlobalStyle } from 'styled-components'\nimport reset from 'styled-reset'\n\nexport const GlobalStyle = createGlobalStyle`\n  ${reset}\n  @import url('https://spoqa.github.io/spoqa-han-sans/css/SpoqaHanSans-kr.css');\n\n  body {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    font-family: 'Spoqa Han Sans', 'Sans-serif'; \n    box-sizing: border-box;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  ul, li {\n    list-style: none;\n  }\n\n  .Clearfix {\n    &::after {\n      display: block;\n      content: \"\";\n      clear: both;\n    }\n  }\n`\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport propTypes from 'prop-types'\n\nimport Header from '../Header'\n\nimport { \n  GlobalStyle\n} from './styled'\n\nconst Layout = ({\n  children\n}) => {\n  return (\n    <>\n      <GlobalStyle />\n      <Header />\n      {children}\n    </>\n  )\n}\n\nexport default Layout\n\nLayout.propTypes = {\n  children: propTypes.node\n}"],"sourceRoot":""}