{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Seo/index.js","webpack:///./src/components/Header/styled.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Layout/styled.js","webpack:///./src/components/Layout/index.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","React","createContext","StaticQuery","props","react_default","a","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","SEO","_ref","lang","title","description","pathname","gatsby_browser_entry_StaticQuery","_ref2","_ref2$site$siteMetada","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","keywords","seo","url","Fragment","Helmet","htmlAttributes","name","content","join","property","_1456177754","article","bool","defaultProps","Wrap","styled","div","withConfig","displayName","componentId","A","Ul","ul","Header","href","className","GlobalStyle","createGlobalStyle","_templateObject","reset","Layout","components_Header","node","Index","components_Layout","Seo","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-js-9f62f3ba2d60390e836a.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { string, bool } from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ lang, title, description, pathname }) => (\n  <StaticQuery\n    query={query}\n    render={({\n      site: {\n        siteMetadata: {\n          defaultTitle,\n          titleTemplate,\n          defaultDescription,\n          siteUrl,\n          keywords\n        },\n      },\n    }) => {\n      const seo = {\n        title: title || defaultTitle,\n        description: description || defaultDescription,\n        url: `${siteUrl}${pathname || \"/\"}`,\n        keywords: keywords\n      }\n      \n      return (\n        <>\n          <Helmet\n            htmlAttributes={{ lang }}\n            title={seo.title}\n            titleTemplate={titleTemplate}>\n            \n            <meta name=\"description\" content={seo.description} />\n            <meta name=\"keywords\" content={keywords.join(', ')} />\n\n            <meta property=\"og:url\" content={seo.url} />\n            <meta property=\"og:type\" content=\"website\" />\n            <meta property=\"og:title\" content={seo.title} />\n            <meta property=\"og:description\" content={seo.description} />\n            \n            <meta name=\"twitter:title\" content={seo.title} />\n            <meta name=\"twitter:description\" content={seo.description} />\n          </Helmet>\n        </>\n      )\n    }}\n  />\n)\n\nexport default SEO\n\nSEO.propTypes = {\n  title: string,\n  description: string,\n  pathname: string,\n  article: bool,\n  lang: string,\n}\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  pathname: null,\n  article: false,\n  lang: 'ko'\n}\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        titleTemplate\n        defaultDescription: description\n        siteUrl: url\n        keywords\n      }\n    }\n  }\n`\n","import styled from 'styled-components'\n\nexport const Wrap = styled.div`\n  padding: 0 20px;\n  height: 80px;\n  box-shadow: 0 4px 12px 0 rgba(0, 0, 0, 0.05);\n`\n\nexport const A = styled.a`\n  float: left;\n  line-height: 80px;\n  font-size: 20px;\n  color: #000;\n`\n\nexport const Ul = styled.ul`\n  float: right;\n  line-height: 80px;\n\n  > li {\n    float: left;\n\n    & + li {\n      margin-left: 10px;\n    }\n  }\n`","import React from 'react'\nimport { } from 'prop-types'\n\nimport { Wrap, A, Ul } from './styled'\n\nconst Header = ({ title, description, }) => {\n  return (\n    <Wrap>\n      <A href=\"/\">Bigshine</A>\n\n      <Ul className='Clearfix'>\n        <li>About</li>\n        <li>About</li>\n        <li>About</li>\n      </Ul>\n    </Wrap>\n  )\n}\n\nexport default Header\n","import { createGlobalStyle } from 'styled-components'\nimport reset from 'styled-reset'\n\nexport const GlobalStyle = createGlobalStyle`\n  ${reset}\n  @import url('https://spoqa.github.io/spoqa-han-sans/css/SpoqaHanSans-kr.css');\n\n  body {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    font-family: 'Spoqa Han Sans', 'Sans-serif'; \n    box-sizing: border-box;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  ul, li {\n    list-style: none;\n  }\n\n  .Clearfix {\n    &::after {\n      display: block;\n      content: \"\";\n      clear: both;\n    }\n  }\n`\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport propTypes from 'prop-types'\n\nimport Header from '../Header'\n\nimport { \n  GlobalStyle\n} from './styled'\n\nconst Layout = ({\n  children\n}) => {\n  return (\n    <>\n      <GlobalStyle />\n      <Header />\n      {children}\n    </>\n  )\n}\n\nexport default Layout\n\nLayout.propTypes = {\n  children: propTypes.node\n}","import React from 'react'\n\nimport Seo from 'components/Seo'\nimport Layout from 'components/Layout'\n\nconst Index = () => {\n  return (\n    <Layout>\n      <Seo />\n    </Layout>\n  )\n}\n\nexport default Index\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}